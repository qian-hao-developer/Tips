Toughpadプロジェクトでの、プラットフォームアプリ開発を例に挙げて紹介します。
=====================================================================================
-------------
従来の開発環境 |
------------------------------------------------------------------------
プラットフォームアプリケーションのディレクトリ構成は、以下のようになっています。
[bash]
tree/packages/apps/Settings$ ls
Android.mk AndroidManifest.xml CleanSpec.mk MODULE_LICENSE_APACHE2 NOTICE proguard.flags res src tests
[/bash]

Android.mk : このアプリケーションのmakefile
AndroidManifest.xml : いつもの
res : いつもの
src : いつもの
tests : このアプリケーションのテストプロジェクト

このまま開発を行う場合、tree全体をEclipseやAndroidStudioで読み込むか、テキストエディタ的なもので開発を行いmmビルドと呼ばれる部分ビルドによってアプリケーションをビルドすることになります。
この方法では、一度フルビルドを行ったtreeの環境がひつようであったり、ブレイクポイントを用いたデバッグなどができません。そこに、AndroidStudioなどのIDEでプラットフォーム開発を行うメリットが見えてきます。

------------------------------------
AndroidStudio用のプロジェクトを作成する |
------------------------------------------------------------------------
現在の最新のAndroidStudio（1.01）は、AndroidManifest.xml,src,resが含まれるディレクトリを参照してプロジェクトのimportを行うと、もとのソースコードをフルコピーしてGradle形式のプロジェクト構成でのプロジェクトを生成してくれます。
この機能を利用し、従来のtree内のプロジェクトを別の場所にコピーしましょう。

例えば、toughpad開発ではvendor/panasonic/toughpad/apps以下にプラットフォームアプリケーションを開発しているので、vendor/panasonic/toughpad/development/apps以下にAndroidStudioのプロジェクトをコピー生成しています。

生成方法は、AndroidStudioのメニューからFile>ImportProjectを選択し、表示されたウィンドウにてvendor/panasonic/toughpad/apps以下のプロジェクトを選択しOKを押下します。
その後、表示されるウィンドウ内でプロジェクトの生成先を指定した後Next,Finishを押下しプロジェクトを生成します。

---------------------------------------------
生成したプロジェクトから元のソースコードを参照させる |
------------------------------------------------------------------------
このままでも開発は可能ですが、メンテナンスするコードが２つになってしまいます。
また、tree全体のビルドのことを考えた場合、元の環境は置いておきたい為、AndroidStudioのプロジェクトから元のソースを参照するようにシンボリックリンクを貼りましょう。

[bash]
$ cd studio-application/app/src/main/
$ rm -fr ./*
$ ln -s path/to/origin-app-dir/AndroidManifest.xml AndroidManifest.xml
$ ln -s path/to/origin-app-dir/src java
$ ln -s path/to/origin-app-dir/res res
[/bash]

その他、assetsやjniなどがある場合も同様にシンボリックリンクを貼っておきましょう。
基本的にはこれでOKなはずです。

------------------
署名が必要なときは？ |
------------------------------------------------------------------------
以下を参考に設定をおこなってください。
<Tips:/プラットフォーム署名のアプリケーションを簡単に作る/>

---------------------
hideAPIが必要なときは？ |
------------------------------------------------------------------------
以下を参考にどうぞ。
<Tips:/AndroidStudioでhideAPIを利用したアプリを開発する/>

--------------------------
libraryをリンクしたいときは？ |
------------------------------------------------------------------------
以下を参考に、、
<Tips:/アプリケーションでjarを読み込む/>

-------------------
jniを使いたいときは？ |
------------------------------------------------------------------------
以下を、、、
<Tips:/NDK/JNI を使う場合（自動版）/>
